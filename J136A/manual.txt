                $                 6
X001E000+    X  1 131 $  0              QUEUE SERVICE (HALT HERE IF H1)
X001E010          020 $  0 010 =  0     READ CLOCK
X001E020          013 *  1 020 L  0     JUMP IF T3 FOR WINDUP
X001E030          002 X 11 010 *  2     JUMP IF L0 FOR ENABLE, ELSE SKIP
X001E040     *  1 025 H  6 002 X  0     JUMP IF TIME TO R0 IN WINDUP
X001E050          020 L  1 002 X 11     JUMP IF L1 TO DISABLE STN
X001E060     *  2 020 L  5 001 *  3     JUMP IF NO L5 FOR Q DRUM SLOT
X001E070          020 H 11 002 X 11     JUMP IF DRUM SLOT AVAILABLE
X001E080     *  3 020 H  4 001 *  4     JUMP IF NO Q MESSAGE DUE
X001E090          020 H 10 002 X 11     JUMP IF BUFFER AVAILABLE FOR MSG
X001E100     *  4 020 H  1 025 H  5
X001E110          002 X  0 010 X  2,    JUMP IF TIME TO LOG, ELSE X2
X004E000+    X  4 010 $  0              FIRE
X004E010          020 P 10 001 *  2     JUMP IF UNCONDITIONAL
X004E020          020 P  1 050 P 11     SAVE SETUP
X004E030          020 P  2 050 P 12
X004E040          020 A 14 050 P  1
X004E050          020 P 10 050 P  2
X004E060          020 $  0 010 = 23     EVALUATE CONDITION
X004E070          002 *  1 010 X  5     JUMP TO X5 ADVANCE IF DOESN'T HOLD
X004E100     *  1 020 P 11 050 P  1     RESTORE SETUP
X004E110          020 P 12 050 P  2
X004E120     *  2 020 $  0 010 = 27     INTERPRET VERB
X004E130          020 * 50 052 * 11
X004E140     * 11 020 ---- 005 G  0     JUMP TO TRY SHORT-SET IF NOT VALID VE
X004E150          025 H 19 001 * 12
X004E160          025 K  1 001 * 13
X004E170     * 12 020 * 11 024 K  2
X004E180          052 * 11 010 * 11
X004E190     * 13 020 * 11 025 * 50
X004E200          024 * 51 052 *  9
X004E210     *  9 010 ----              GO TO GXXX
X004E220     * 50     * 60
X004E230     * 51     G  0
X004E240     * 60 000,0000,063,0524     SET
X004E250          000,0000,000,4417     DO
X004E260          000,0000,000,6417     TO
X004E270          000,0004,417,1605     DONE
X004E280          004,3011,603,0514     CANCEL
X004E290          004,4051,405,2405     DELETE
X004E300          000,0006,431,2005     TYPE
X004E310          000,0005,411,1605     LINE
X004E320          000,0006,001,0705     PAGE
X004E330          000,0006,205,0104     READ
X004E340          000,0602,516,0310     PUNCH
X004E350          000,0004,617,2215     FORM
X004E360          000,0006,324,1720     STOP
X004E370          000,0000,000,4717     GO
X004E380          004,4051,501,1604     DEMAND
X004E390          100,0000,000,0000,
X005E000+    X  5 010 $  0              ADVANCE
X005E010          020 Q  8 001 *  5     JUMP IF TASK FINISHED
X005E020          071    1 001 X  7     JUMP IF 'STEP'
X005E030          020 P 16 002 *  1     JUMP IF P16 STILL GOOD
X005E035          020 Q  9 050 P 21     SET STEP
X005E040          020 $  0 010 = 51     FIND CURRENT STEP
X005E050          002 *  1 010 $  1     TO *1 IF FOUND
X005E060          020 H 23 001 X  7     TO X7 (ASCEND) IF DONE.
X005E070          020 H 26 001 X  7     TO X7 (ASCEND) IF DONE.
X005E080          020 H 25 010 *  1     GIMMICK TO GET NEXT
X005E090     *  1 052 *  2 010 $  1
X005E095          024 K  2 052 *  6
X005E096     *  6 020 ---- 050 Q  9     SET Q9
X005E100     *  2 020 ---- 001 *  4
X005E110     *  3 050 P 16 010 X  6     SET P16 FOR NEXT STEP AND GO TO X6(FE
X005E120     *  4 050 P 16 101 X  7     SET P16 AND GO TO X7 (ASCEND)
X005E130     *  5 020 $  0 010 = 55     SWITCH TO USER--TASK COMPLETE
X005E140          020 $  0 010 = 53     KICK OUT PROGRAM
X005E150          010 X  1         ,    GO BACK TO Q SERVICE.
=009E000+    =  9 130 =  9 134 =  9
=010E000+    = 10 024 K  2 010 $  0     DEAL OUT A STORAGE SPACE
=010E010          052 *  9 020 Q  0
=010E020          001 E  0 056 *  1
=010E030     *  1 050 T  0 020 ----
=010E040          050 Q  0 020 T  0     LEAVES ADDR IN R(ACC)
=010E050     *  9 010 ----         ,
=022E000+    = 22 010 $  0 010 *  1     TYPE TIME LINE (ENTER RT SUPPRESSES E
=022E010          050 * 90 010 $  1
=022E020          020 A 31 050 S  1
=022E030          020 S  0 024 K  3
=022E040          050 P 12 010 *  2
=022E050     *  1 050 * 90 010 $  1
=022E060          020 S  0 050 P 12
=022E070     *  2 020 $  0 010 = 61     TIME
=022E080          020 $  0 010 = 62     SPACE
=022E090          020 $  0 010 = 64     DATE
=022E100              H  2     H  2
=022E110          020 $  0 010 = 62     SPACE
=022E120          020 $  0 010 = 64     INITIALS
=022E130              Z  0     Z  0
=022E140          020 $  0 010 = 64     SIX CR'S AND EOM
=022E150              * 91     * 91
=022E160          120    0 050 P  0     RESET LINE COUNTER
=022E170          020 * 90 010 = 25     EXIT VIA=25 TO OUTPUT LINE FROM S
=022E180     * 90 --- ---- --- ----     LINK
=022E190     * 91 027,0561,342,7056
=022E200          025,2000,000,0000,
=024E000+    = 24 010 $  0              CONVERT FUNCTION TO OPERATOR
=024E010          024 K  2 052 *  9
=024E020          020 $  0 010 = 14
=024E030          020 $  0 010 = 27
=024E040          050 T  0 004 K  2
=024E050          020 * 50 052 *  1
=024E060     *  1 020 ---- 001 E  6
=024E070          025 T  0 001 *  2
=024E080          025 K  1 005 *  3
=024E090     *  2 020 *  1 064 *  1
=024E100     *  3 010 *  1 020 *  1
=024E110          124 K  6 025 * 50
=024E120          024 * 51 050 Q  5     STACK FN AS OPERATOR IN Q5
=024E130     *  9 010 ----
=024E140     * 50     * 60
=024E150     * 51     F  0 440
=024E160     * 60 000,0002,321,2224     SQRT (ORDERED SAME AS F'S)
=024E170          000,0000,014,1707     LOG
=024E180          000,0000,005,3020     EXP
=024E190          000,0000,023,1116     SIN
=024E200          000,0000,003,1723     COS
=024E210          000,0000,000,1120     IP
=024E220          000,0000,000,0620     FP
=024E230          000,0000,000,3020     XP
=024E240          000,0000,000,0420     DP
=024E250          000,0000,023,0716     SGN
=024E260          000,0000,001,2207     ARG
=024E270          000,0000,015,0130     MAX
=024E280          000,0000,015,1116     MIN
=024E290          100,0000,000,0000,
=025E000+    = 25 010 $  0 010 *  1     OUTPUT LINE FROM S BLOCK TO STN
=025E010          024 K  2 052 P 14     SET EXIT IN P15 (INITIAL ENTRY)
=025E020     *  1 020 $  0 010 =  8     ASSIGN BUFFER (REENTRY POINT)
=025E030          001 *  3 140 S  1     LOAD BUFFER IF ASSIGNED
=025E040          020 H 12 024 U  1
=025E050          052 *  2 020 H 13
=025E060     *  2 025 ---- 001 *  5     EXIT VIA P14 IF CAN'T TL YET
=025E070          025 K  1 002 *  5     EXIT VIA P14 IF CAN'T TL YET
=025E080          020 H 12 024 K 24     OK TO TRANSMIT
=025E090          142 K 24 010 *  5     EXIT VIA P14
=025E100     *  3 020 H 10 001 *  4
=025E110          020 $  0 010 = 47     CHOKED-CHANGE STATE TO L14
=025E120              L 14     L 14
=025E130          010 *  6
=025E140     *  4 020 $  0 010 = 47     Q FOR BUFFER AND PREFERRED PROCESSING
=025E150              L 11     L 11
=025E155     *  6 020 $  0 010 = 53     KICK OUT PROGRAM
=025E160          010 X  1              EXIT TO EXECUTIVE
=025E170     *  5 020 J 22 004 I  1     COUNT ONE OUTPUT
=025E172          064 J 22 020 P  0     COUNT ONE LINE NUMBER
=025E180          064 P  0 025 J  2
=025E190          001 P 14 020 P 14
=025E200          025 K  2 010 = 22,    EXIT VIA=22 IF NEW PAGE NEEDED
=026E000+    = 26 124 K  6 010 $  0     EVALUATE GROUPED LIST
=026E010          024 K  2 050 H 18     RESULT IN Q3 AND AUX
=026E020          020 $  0 010 = 14
=026E030          020 H 18 050 Q  5     STACK EXIT IN OPERATORS
=026E040          020 P  1 124 A 73
=026E045          025 A 73 002 *  1
=026E050          020 P  1 124 A123
=026E055          025 A123 001 E  6     MALFORMED IF NOT LEFT PAREN OR BRACKE
=026E060     *  1 020 $  0 010 = 14     PUSH OPERATORS
=026E070          020 P  1 050 Q  5     STACK CHARACTER IN OPERATORS
=026E080          020 $  0 010 =  1     ADVANCE
=026E090          020 $  0 010 = 21     EVALUATE EXPRESSION
=026E100          020 P  1 124 A 59
=026E110          025 A 59 002 *  1     JUMP IF COMMA
=026E120     *  2 020 Q  5 124 A 59
=026E130          025 A 59 001 *  3     JUMP IF PREV OPERATOR NOT COMMA
=026E140          020 $  0 010 = 15     POP COMMA
=026E150          020 $  0 010 = 16     PUSH AUX
=026E160          020 Q  3 050 Q  7     SAVE VALUE OF EXPR IN AUX
=026E170          020 $  0 010 = 13     POP Q3
=026E180          010 *  2
=026E190     *  3 020 $  0 010 = 77     MATCH GROUPERS
=026E195          020 $  0 010 =  2     ADVANCE TO NONSPACE
=026E200          020 Q  5 052 *  9
=026E210          020 $  0 010 = 15     POP Q5
=026E220     *  9 010 ----         ,    EXIT
=077E000+    = 77 010 $  0              MATCH GROUPERS
=077E010          024 K  2 052 *  9
=077E020          020 P  1 052 *  1
=077E030          050 J 20 124 K 32     LEAVE RIGHT GROUPER FOR DO AND G14
=077E040          025 K 32 001 E  6     ERROR IF NOT RIGHT GROUPER
=077E050     *  1 020 ---- 124 Q  5
=077E060          025 Q  5 001 E  6     ERROR IF NO MATCH WITH PREV OPERATOR
=077E070          020 $  0 010 = 15     POP OPERATOR
=077E080     *  9 010 ----         ,    EXIT
=078E000+    = 78 010 $  0              TRANSMIT LINE AND RESTORE
=078E010          024 K  2 052 P 25     DRUM ROUTINE IF NECESSARY
=078E020          020 H 17 050 P 24     SAVE DRUM CW
=078E030          020 $  0 010 = 25     TRANSMIT
=078E040          020 H 17 025 P 24
=078E050          050 T  0 023 T  0
=078E060          002 P 25 004 P 24     EXIT VIA P25 IF STILL INTACT
=078E070          060 H 17 110 M  0     ELSE READ FROM DRUM
=078E080          010 P 25         ,    THEN EXIT
=079E000+    = 79 024 K  2 010 $  0     VERIFY PRECEDING SPACE
=079E010          052 *  9 020 P  2
=079E020          025 K  3 052 *  1
=079E030     *  1 020 ---- 124 A 14
=079E040          025 A 14 001 E  6
=079E050     *  9 010 ----         ,